---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: task-influx-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: influxdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      volumes:
        - name: var-lib-influxdb
          persistentVolumeClaim:
            claimName: task-influx-claim
      containers:
        - name: influxdb
          image: 'docker.io/influxdb:1.6.4'
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8086
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: var-lib-influxdb
---
apiVersion: v1
kind: Service
metadata:
  name: svc-influxdb
  labels:
    app: influxdb
spec:
  type: NodePort
  ports:
    - port: 8086
  selector:
    app: influxdb
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: task-grafana-claim
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      volumes:
        - name: var-lib-grafana
          persistentVolumeClaim:
            claimName: task-grafana-claim    
      containers:
        - name: grafana
          image: grafana/grafana
          imagePullPolicy: IfNotPresent
          ports:
            - name: web
              containerPort: 3000
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: var-lib-grafana
---
apiVersion: v1
kind: Service
metadata:
  name: svc-grafana
  annotations:
    sherlock.nutanix.com/http-ingress-path: /
spec:
  ports:
    - protocol: TCP
      name: web
      port: 3000
  selector:
    app: grafana
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: xi-kafka-influx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: xi-kafka-influx
  template:
    metadata:
      labels:
        app: xi-kafka-influx
    spec:
      containers:
        - name: xi-kafka-influx
          image: voxic/xektia
          imagePullPolicy: Always
          env:
            - name: KAFKA_SERVER
              value: '{{.Services.Kafka.Endpoint}}'
            - name: KAFKA_TOPIC
              value: weather-data
            - name: INFLUXDB_SERVER
              value: svc-influxdb    